{"version":3,"sources":["assets/logo.svg","assets/githubLogo.svg","styles/global.ts","services/api.ts","pages/Home/styles.ts","pages/Home/index.tsx","pages/Repository/styles.ts","pages/Repository/index.tsx","routes/index.tsx","App.tsx","index.tsx"],"names":["module","exports","createGlobalStyle","githubBackground","api","axios","create","baseURL","Title","styled","h1","Form","form","props","hasError","css","shade","Repositories","div","Error","span","Home","useState","newRepo","setNewRepo","error","setError","storageRepos","localStorage","getItem","JSON","parse","repositories","setRepositories","e","a","preventDefault","get","repo","data","useEffect","setItem","stringify","src","logoImg","alt","onSubmit","placeholder","value","onChange","target","type","map","repository","key","full_name","to","owner","avatar_url","login","description","size","onClick","name","remainingRepos","filter","handleDeleteRepository","spin","keyframes","Header","header","RepositoryInfo","section","Issues","NotFound","p","Loading","FiLoader","Repository","setRepository","issues","setIssues","params","useRouteMatch","Promise","all","repoIssues","getData","stargazers_count","forks_count","length","issue","id","href","html_url","rel","title","user","Routes","path","exact","component","App","basename","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a50445fb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.04f6798f.svg\";","module.exports = __webpack_public_path__ + \"static/media/githubLogo.fe82ec00.svg\";","import { createGlobalStyle } from 'styled-components';\n\nimport githubBackground from '../assets/githubLogo.svg';\n\nexport default createGlobalStyle`\n  * {\n    margin: 0;\n    padding: 0;\n    outline: 0;\n    box-sizing: border-box;\n  }\n\n  body {\n    background: #F0F0F5 url(${githubBackground}) no-repeat 70% top;\n    -webkit-font-smoothing: antialiased;\n  }\n\n  body, input, button {\n    font: 16px Roboto, sans-serif;\n  }\n\n  button {\n    cursor: pointer;\n  }\n\n  #root {\n    width: 960px;\n    margin: 0 auto;\n    padding: 40px 20px;\n  }\n`;\n","import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: 'https://api.github.com',\n});\n\nexport default api;\n","import styled, { css } from 'styled-components';\nimport { shade } from 'polished';\n\ninterface FormProps {\n  hasError: boolean;\n}\n\nexport const Title = styled.h1`\n  font-size: 48px;\n  color: #3a3a3a;\n  line-height: 56px;\n  max-width: 450px;\n  margin-top: 80px;\n`;\n\nexport const Form = styled.form<FormProps>`\n  margin-top: 40px;\n  max-width: 700px;\n\n  display: flex;\n\n  input {\n    flex: 1;\n    height: 70px;\n    padding: 0 24px;\n    border: 0;\n    border-radius: 5px 0 0 5px;\n    color: #3a3a3a;\n    border: 2px solid #fff;\n    border-right: 0;\n\n    ${props =>\n      props.hasError &&\n      css`\n        border-color: #c53030;\n      `}\n\n    &::placeholder {\n      color: #a8a8b3;\n    }\n  }\n\n  button {\n    width: 210px;\n    height: 70px;\n    background: #04d361;\n    border-radius: 0 5px 5px 0;\n    border: 0;\n    color: #fff;\n    font-weight: bold;\n    transition: background-color 0.2s;\n\n    &:hover {\n      background: ${shade(0.2, '#04d361')};\n    }\n  }\n`;\n\nexport const Repositories = styled.div`\n  margin-top: 80px;\n  max-width: 700px;\n\n  & > div {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n\n    &:not(:last-of-type) {\n      margin-bottom: 16px;\n    }\n\n    a {\n      flex: 1;\n      background: #fff;\n      border-radius: 5px;\n      width: 100%;\n      padding: 24px;\n      display: block;\n      text-decoration: none;\n\n      display: flex;\n      align-items: center;\n      transition: transform 0.2s;\n\n      &:hover {\n        transform: translateX(10px);\n      }\n\n      & + a {\n        margin-top: 16px;\n      }\n\n      img {\n        width: 64px;\n        height: 64px;\n        border-radius: 50%;\n      }\n\n      div {\n        flex: 1;\n        margin: 0 16px;\n\n        strong {\n          font-size: 20px;\n          color: #3d3d4d;\n        }\n\n        p {\n          font-size: 18px;\n          color: #a8a8b3;\n          margin-top: 4px;\n        }\n      }\n\n      svg {\n        margin-left: auto;\n        color: #cbcbd6;\n      }\n    }\n\n    & > svg {\n      display: inline-block;\n      margin-left: 8px;\n      transition: all 0.2s;\n      color: #cbcbd6;\n      cursor: pointer;\n      &:hover {\n        color: #c53030;\n        transform: scale(1.2);\n        transform: rotate(90deg);\n      }\n    }\n  }\n`;\n\nexport const Error = styled.span`\n  display: block;\n  color: #c53030;\n  margin-top: 8px;\n`;\n","import React, { useState, FormEvent, useEffect } from 'react';\nimport { FiChevronRight, FiX } from 'react-icons/fi';\nimport { Link } from 'react-router-dom';\n\nimport api from '../../services/api';\n\nimport logoImg from '../../assets/logo.svg';\nimport { Title, Form, Repositories, Error } from './styles';\n\ninterface RepositoryDTO {\n  full_name: string;\n  description: string;\n  owner: {\n    login: string;\n    avatar_url: string;\n  };\n}\n\nconst Home: React.FC = () => {\n  const [newRepo, setNewRepo] = useState('');\n  const [error, setError] = useState('');\n  const [repositories, setRepositories] = useState<RepositoryDTO[]>(() => {\n    const storageRepos = localStorage.getItem('@GithubExplorer:repositories');\n    if (storageRepos) {\n      return JSON.parse(storageRepos);\n    }\n    return [];\n  });\n\n  useEffect(() => {\n    localStorage.setItem(\n      '@GithubExplorer:repositories',\n      JSON.stringify(repositories),\n    );\n  }, [repositories]);\n\n  async function handleAddRepository(\n    e: FormEvent<HTMLFormElement>,\n  ): Promise<void> {\n    e.preventDefault();\n    if (!newRepo) {\n      setError('Type author/repository-name');\n      return;\n    }\n    try {\n      const { data: repo } = await api.get<RepositoryDTO>(`repos/${newRepo}`);\n      setRepositories([...repositories, repo]);\n      setNewRepo('');\n      setError('');\n    } catch (err) {\n      setError('Repository not found.');\n    }\n  }\n\n  function handleDeleteRepository(name: string): void {\n    const remainingRepos = repositories.filter(repo => repo.full_name !== name);\n    setRepositories(remainingRepos);\n  }\n\n  return (\n    <>\n      <img src={logoImg} alt=\"Github Explorer\" />\n      <Title>Explore Github repositories.</Title>\n\n      <Form hasError={!!error} onSubmit={handleAddRepository}>\n        <input\n          placeholder=\"Type the repository name\"\n          value={newRepo}\n          onChange={e => setNewRepo(e.target.value)}\n        />\n        <button type=\"submit\">Search</button>\n      </Form>\n\n      {error && <Error>{error}</Error>}\n\n      <Repositories>\n        {repositories.map(repository => (\n          <div key={repository.full_name}>\n            <Link to={`/repository/${repository.full_name}`}>\n              <img\n                src={repository.owner.avatar_url}\n                alt={repository.owner.login}\n              />\n              <div>\n                <strong>{repository.full_name}</strong>\n                <p>{repository.description}</p>\n              </div>\n              <FiChevronRight size={20} />\n            </Link>\n            <FiX\n              size={20}\n              onClick={() => handleDeleteRepository(repository.full_name)}\n            />\n          </div>\n        ))}\n      </Repositories>\n    </>\n  );\n};\n\nexport default Home;\n","import styled, { keyframes } from 'styled-components';\nimport { shade } from 'polished';\nimport { FiLoader } from 'react-icons/fi';\n\nconst spin = keyframes`\n\tfrom {\n\t\ttransform: rotate(0deg);\n\t}\n\tto {\n\t\ttransform: rotate(360deg);\n\t}\n`;\n\nexport const Header = styled.header`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  a {\n    display: flex;\n    align-items: center;\n    text-decoration: none;\n    color: #a8a8b3;\n    transition: color 0.2s;\n    cursor: pointer;\n\n    &:hover {\n      color: ${shade('0.2', '#a8a8b3')};\n    }\n\n    svg {\n      margin-right: 4px;\n    }\n  }\n`;\n\nexport const RepositoryInfo = styled.section`\n  margin-top: 80px;\n\n  header {\n    display: flex;\n    align-items: center;\n\n    img {\n      width: 120px;\n      height: 120px;\n      border-radius: 50%;\n    }\n\n    div {\n      margin-left: 24px;\n\n      strong {\n        font-size: 36px;\n        color: #3d3d4d;\n      }\n\n      p {\n        font-size: 18px;\n        color: #737380;\n        margin-top: 4px;\n      }\n    }\n  }\n\n  ul {\n    display: flex;\n    list-style: none;\n    margin-top: 40px;\n\n    li {\n      & + li {\n        margin-left: 80px;\n      }\n\n      strong {\n        display: block;\n        font-size: 36px;\n        color: #3d3d4d;\n      }\n\n      p {\n        display: block;\n        margin-top: 4px;\n        color: #6c6c80;\n      }\n    }\n  }\n`;\n\nexport const Issues = styled.div`\n  margin-top: 80px;\n\n  a {\n    background: #fff;\n    border-radius: 5px;\n    width: 100%;\n    padding: 24px;\n    display: block;\n    text-decoration: none;\n\n    display: flex;\n    align-items: center;\n    transition: transform 0.2s;\n\n    &:hover {\n      transform: translateX(10px);\n    }\n\n    & + a {\n      margin-top: 16px;\n    }\n\n    div {\n      flex: 1;\n      margin: 0 16px;\n\n      strong {\n        font-size: 20px;\n        color: #3d3d4d;\n      }\n\n      p {\n        font-size: 18px;\n        color: #a8a8b3;\n        margin-top: 4px;\n      }\n    }\n\n    svg {\n      margin-left: auto;\n      color: #cbcbd6;\n    }\n  }\n`;\n\nexport const NotFound = styled.p`\n  margin-top: 80px;\n  font-size: 24px;\n  color: ${shade(0.2, '#a8a8b3')};\n`;\n\nexport const Loading = styled(FiLoader)`\n  display: block;\n  margin: 25% auto;\n  animation: ${spin} 4s linear infinite;\n`;\n","import React, { useState, useEffect } from 'react';\nimport { useRouteMatch, Link } from 'react-router-dom';\nimport { FiChevronLeft, FiChevronRight } from 'react-icons/fi';\nimport api from '../../services/api';\n\nimport logoImg from '../../assets/logo.svg';\n\nimport { Header, RepositoryInfo, Issues, NotFound, Loading } from './styles';\n\ninterface RepositoryParams {\n  repository: string;\n}\n\ninterface RepositoryDTO {\n  full_name: string;\n  description: string;\n  stargazers_count: number;\n  forks_count: number;\n  open_issues_count: number;\n  owner: {\n    login: string;\n    avatar_url: string;\n  };\n}\n\ninterface Issue {\n  id: number;\n  title: string;\n  html_url: string;\n  user: {\n    login: string;\n  };\n}\n\nconst Repository: React.FC = () => {\n  const [repository, setRepository] = useState<RepositoryDTO | null>(null);\n  const [issues, setIssues] = useState<Issue[]>([]);\n\n  const { params } = useRouteMatch<RepositoryParams>();\n\n  useEffect(() => {\n    async function getData(): Promise<void> {\n      const [repo, repoIssues] = await Promise.all([\n        api.get(`repos/${params.repository}`),\n        api.get(`repos/${params.repository}/issues`),\n      ]);\n      setRepository(repo.data);\n      setIssues(repoIssues.data);\n    }\n\n    getData();\n  }, [params.repository]);\n\n  return (\n    <>\n      <Header>\n        <Link to=\"/\">\n          <img src={logoImg} alt=\"Github Explorer\" />\n        </Link>\n        <Link to=\"/\">\n          <FiChevronLeft size={16} />\n          Back\n        </Link>\n      </Header>\n      {repository ? (\n        <>\n          <RepositoryInfo>\n            <header>\n              <img\n                src={repository.owner.avatar_url}\n                alt={repository.owner.login}\n              />\n              <div>\n                <strong>{repository.full_name}</strong>\n                <p>{repository.description}</p>\n              </div>\n            </header>\n            <ul>\n              <li>\n                <strong>{repository.stargazers_count}</strong>\n                <p>Stars</p>\n              </li>\n              <li>\n                <strong>{repository.forks_count}</strong>\n                <p>Forks</p>\n              </li>\n              <li>\n                <strong>{repository.full_name}</strong>\n                <p>Open Issues</p>\n              </li>\n            </ul>\n          </RepositoryInfo>\n          {issues.length > 0 ? (\n            <Issues>\n              {issues.map(issue => (\n                <a\n                  key={issue.id}\n                  href={issue.html_url}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  <div>\n                    <strong>{issue.title}</strong>\n                    <p>{issue.user.login}</p>\n                  </div>\n                  <FiChevronRight size={20} />\n                </a>\n              ))}\n            </Issues>\n          ) : (\n            <NotFound>There are no open issues.</NotFound>\n          )}\n        </>\n      ) : (\n        <Loading size={80} />\n      )}\n    </>\n  );\n};\n\nexport default Repository;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport Home from '../pages/Home';\nimport Repository from '../pages/Repository';\n\nconst Routes: React.FC = () => (\n  <Switch>\n    <Route path=\"/\" exact component={Home} />\n    <Route path=\"/repository/:repository+\" component={Repository} />\n  </Switch>\n);\n\nexport default Routes;\n","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport GlobalStyle from './styles/global';\nimport Routes from './routes';\n\nconst App: React.FC = () => (\n  <>\n    <GlobalStyle />\n    <BrowserRouter basename=\"build\">\n      <Routes />\n    </BrowserRouter>\n  </>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}